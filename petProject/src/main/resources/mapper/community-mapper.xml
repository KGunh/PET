<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kh.pet.community.model.dao.CommunityMapper">
	
	<!-- SQL태그 ****************************************************************************************************** -->
	
	<sql id="searchInInfo">
		FROM
				TB_INFO
		<choose>
			<when test="animal == 'A0'">
				<choose>
					<when test="category == 'I0'">
						WHERE CATEGORY_CODE IN ('I1', 'I2')	
					</when>
					<otherwise>
						WHERE CATEGORY_CODE = #{category}	
					</otherwise>
				</choose>
			</when>
			<otherwise>
				JOIN 
						TB_BOARD_ANIMAL USING(BOARD_NO)
				WHERE
						ANIMAL_CODE = #{animal}
				<choose>
					<when test="category == 'I0'">
						AND CATEGORY_CODE IN ('I1', 'I2')	
					</when>
					<otherwise>
						AND CATEGORY_CODE = #{category}	
					</otherwise>
				</choose>
			</otherwise>
		</choose>
		AND
				BOARD_STATUS = 'Y'
	</sql>

	<!-- ResultMap ****************************************************************************************************** -->
	
	<resultMap type="animal" id="animalResultSet">
		<result column="ANIMAL_CODE" property="animalCode" />
		<result column="ANIMAL_NAME" property="animalName" />
	</resultMap>
	
	<resultMap type="attachment" id="attachmentResultSet">
		<result column="ATT_NO" property="attNo"/>
		<result column="ATT_PATH" property="attPath"/>
		<result column="ORIGIN_NAME" property="originName"/>
		<result column="CHANGE_NAME" property="changeName"/>
		<result column="ATT_STATUS" property="attStaus"/>
		<result column="BOARD_NO" property="boardNo"/>
		<result column="ATT_LELVEL" property="attLevel"/>
	</resultMap>
	
	<resultMap type="reply" id="replyResultSet">
		<result column="REPLY_NO" property="replyNo"/>
		<result column="REPLY_WRITER" property="replyWriter"/>
		<result column="REPLY_CONTENT" property="replyContent"/>
		<result column="REPLY_CREATE_DATE" property="createDate"/>
		<result column="REPLY_UPDATE_DATE" property="updateDate"/>
		<result column="REPLY_STATUS" property="replyStatus"/>
		<collection resultMap="commentResultSet" property="commentList" />
	</resultMap>

	<resultMap type="comment" id="commentResultSet">
		<result column="COMMENT_NO" property="commentNo"/>
		<result column="REPLY_NO" property="replyNo"/>
		<result column="COMMENT_WRITER" property="commentWriter"/>
		<result column="COMMENT_CONTENT" property="commentContent"/>
		<result column="COMMENT_CREATE_DATE" property="createDate"/>
		<result column="COMMENT_UPDATE_DATE" property="updateDate"/>
		<result column="COMMENT_STATUS" property="commentStatus"/>
	</resultMap>
	
	
	<resultMap type="info" id="infoResultSet">
		<result column="BOARD_NO" property="boardNo"/>
		<result column="BOARD_TITLE" property="boardTitle"/>
		<result column="BOARD_CONTENT" property="boardContent"/>
		<result column="BOARD_COUNT" property="boardCount"/>
		<result column="CREATE_DATE" property="createDate" />
		<result column="BOARD_WRITER" property="memberNo"/>
		<result column="BO_CATEGORY_NAME" property="categoryCode"/>
		<result column="UPDATE_DATE" property="updateDate"/>
		<result column="BOARD_STATUS" property="boardStatus"/>
		<result column="CATEGORY_CODE" property="categoryCode"/>
		<result column="BOARD_LIKE" property="boardLike"/>
		<result column="SUM_COUNT" property="sumCount"/>
		
		<collection resultMap="attachmentResultSet" property="attachmentList"/>
		<collection resultMap="replyResultSet" property="replyList"/>
		<collection resultMap="animalResultSet" property="animalList"/>
	</resultMap>
	
	<!-- SQL 구문****************************************************************************************************** -->

	<select id="selectListCount" parameterType="hashmap" resultType="_int">
		SELECT 
				COUNT(*) 
		<include refid="searchInInfo" />
	</select>
	
	<select id="selectForwardCount" parameterType="hashMap" resultMap="infoResultSet">
		SELECT 
				BOARD_NO
		<include refid="searchInInfo" />
		ORDER BY
				BOARD_NO DESC
	</select>
	
	<select id="selectCommunityList" parameterType="java.util.List" resultMap="infoResultSet">
		SELECT
		        BOARD_NO,
		        NICKNAME BOARD_WRITER,
		        ANIMAL_NAME,
		        CREATE_DATE,
		        BOARD_TITLE,
		        BOARD_CONTENT,
		        BOARD_COUNT,
		        NVL(BOARD_LIKE, 0) BOARD_LIKE,
		        REPLY_COUNT + COMMENT_COUNT SUM_COUNT,
		        BOARD_STATUS,
		        CATEGORY_CODE,
		        ATT_PATH,
		        CHANGE_NAME
		FROM
		        TB_INFO
		LEFT JOIN
		        TB_BOARD_ANIMAL USING(BOARD_NO)
		LEFT JOIN
		        TB_ANIMAL USING(ANIMAL_CODE)
		LEFT JOIN
		        TB_MEMBER USING(MEMBER_NO)
		LEFT JOIN
		        (
		        SELECT 
		                COUNT(*) BOARD_LIKE, 
		                BOARD_NO 
		        FROM 
		                TB_LIKE 
		        GROUP BY 
		                BOARD_NO
		        ) USING (BOARD_NO)
		LEFT JOIN
		        (
		        SELECT 
		                BOARD_NO,
		                COUNT(REPLY_NO) REPLY_COUNT,
		                COUNT(COMMENT_NO) COMMENT_COUNT
		        FROM 
		                TB_INFO 
		        LEFT JOIN
		                TB_REPLY USING(BOARD_NO)
		        LEFT JOIN
		                TB_COMMENT USING(REPLY_NO)
		        GROUP BY
		                BOARD_NO
		        ) USING (BOARD_NO)
		LEFT JOIN
		        TB_ATTACHMENT USING(BOARD_NO)
		WHERE
				BOARD_STATUS = 'Y'
		AND
				BOARD_NO IN
				<foreach collection="list" item="item" open="(" separator="," close=")">
			   		#{item.boardNo}
			  	</foreach>
		ORDER BY 
				BOARD_NO DESC
	</select>
	
	<update id="updateBoardCount" parameterType="_int">
		UPDATE 
				TB_INFO 
		SET 
				BOARD_COUNT = BOARD_COUNT + 1 
		WHERE 
				BOARD_NO = #{boardNo}
	</update>
	
	<select id="likeCheck" parameterType="hashMap" resultType="_int">
		SELECT 
				COUNT(*)
		FROM
				TB_LIKE
		WHERE
				BOARD_NO = #{boardNo}
		AND
				MEMBER_NO = #{memberNo}
	</select>
	
	<insert id="insertCommunity" parameterType="info">
		INSERT INTO TB_INFO VALUES()	
	</insert>
	
	
</mapper>